
#####################
## how many cpus to use
## values smaller 0 mean that all avaiblable but the mentioned number will be used
## e.g. if the computer has 4 cores and UseCPUs is set to -1 then 3 threads are used for search.
## this is a bit relativated by the buffering, as buffers also use threads to decouple the input and output of the buffer.
## each thread will also have a small buffer between itself and the input and the output queue - but the overal cpu-usage of these should be smallish
UseCPUs:-1








####################
## include linear matches
EVALUATELINEARS:true




## peptide ion should always be enabled, as otherwise no standard cross-linked fragments will be matched - also needed for precoursor-fragment matches
fragment:PeptideIon


#####################
## Generally lossy fragmenst will have a smaller impact on subscores then non-lossy versions of a fragment.
## But some subscores (anything called conservative) considere a fragment observed even if n neutral losses for that fragment where observed but not the fragment itself 
## this defines how many loses are needed to make a fragment count as observed
ConservativeLosses:3



####################
# if this is set to true also fragment matches are reported that are of by 1 dalton
MATCH_MISSING_MONOISOTOPIC:true


####################
## how many peaks to consider for alpha-peptide-search
mgcpeaks:10

###################
### Candidate selection
## Scoreing happens in three stages
## alpha candidates are selected and scored
## top n aplpha candidates are taken and all matching beta-candidates will be selected and prescored
## the top X of these are then fully matched and scored
## how many "alpha" peptide candidiates will be considered for finding beta candidates
topmgchits:150
## how many combinations of alpha and beta peptides will be considered for final scoring
topmgxhits:10

##################
## how many misscleavages are considered
missedcleavages:4

####################
## define a minimum peptide length (default 2)
#MINIMUM_PEPTIDE_LENGTH:6


#####################
## IO-settings - for improving the parallel processing it's better to do some buffering 
## this reduces the time threads potentially have to wait for spectra to be searched (BufferInput)
## or to be written out (BufferOutput).
BufferInput:100
BufferOutput:100






#####################
## Only write out the top match per spectrum
TOPMATCHESONLY:true

#####################
## maximum mass of a peptide to be considered for fragmentation
#MAXPEPTIDEMASS:5000

#####################
## some limits for generating modified peptides
MAX_MODIFICATION_PER_PEPTIDE:3
MAX_MODIFIED_PEPTIDES_PER_PEPTIDE:20

####################
##If the top-match for a spectra has a score lower than this, the spectra and all of its matches are not reported
#MINIMUM_TOP_SCORE:0







#########################################
## what fragment tree to use
## default: the default tree
## FU: uses a fastutil based implementation of the fragmenttree and conservea lot of memory doing so.
## searching a few hunderd proteins is then possible with just 8GB
FRAGMENTTREE:FU


#########################################
## we need the run name and scan number for a spectrum
## but mgf-files have that info (if at all) in the TITLE line
## and it is not exactly defined how that is stored
## some mgf-files that we have encountered are already regognised for others
## the following to regular expressions can be defined to read out scan number and run
## if both are supplied these will be first tried before the internal automatic will be used
## the scan number and the raw file need to be in the first capturing group
## Example:
## the mgf contains headers like:
## TITLE= Elution from: -1.0 to -1.0 period:  experiment:  cycles:  precIntensity: -1.0 RawFile: myrawfile FinneganScanNumber: 14846
## then the regular expressions should be defined as
## SCAN_RE: .*FinneganScanNumber:\s*([0-9]*)\s*
## RUN_RE: .*RawFile:\s*(.*)FinneganScanNumber:
##
## XiSearch comes with a range of know regulare mgf-title formats but there are a lot 
## more formats out there. So if you encounter an error that the file is not known try this.
## 
#SCAN_RE:
#RUN_RE:



#########################################
## for a fragment up to how many neutral losses for that fragment are considered
#MAXTOTALLOSSES:

#########################################
## for each type of loss up to how often is that considered for a single fragment
#MAXLOSSES:

#########################################
## if a spectrum comes with a list of predefined masses for the peptides
## take these as the exclusively accepted masses or just give them priorety? 
#XL_Peptide_Mass_Candidates_Exclusive:false


########################################
## the normalized score by default ignores subscores that are not defined
## with this setting the miossing score can be replaced by a different score
## this replacement would be replacement for the normalized score and the most 
## sensible replacement I coudl see would be "1".
##
normalizerml_defaultsubscorevalue:1

########################################
##InputFIlter that modify the spectra before search
##
##DENOISE
## very beta - don't use
## denoise the spectra prior search (default top 20 peaks per 100 Da are kept
#FILTER:denoise:peaks:15;window:100

########################################
## consider also matches to a precursor mass that
## are up to n Da (actually n*1.00335Da) lighter
## this would account for missing isotope peaks in the MS1
missing_isotope_peaks:2